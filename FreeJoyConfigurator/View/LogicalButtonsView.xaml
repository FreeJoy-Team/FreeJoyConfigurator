<UserControl x:Class="FreeJoyConfigurator.LogicalButtonsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:FreeJoyConfigurator"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="510" d:DesignWidth="560" MinWidth="560">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="ButtonTypeFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}" IsAsynchronous="True">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:ButtonType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ShiftTypeFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}" IsAsynchronous="True">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:ShiftType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="TimerTypeFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}" IsAsynchronous="True">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:TimerType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>


        <ScrollViewer d:DataContext="{d:DesignInstance {x:Type local:MainVM}}">

        <StackPanel Orientation="Vertical">
        <Grid>
            <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="0.4*"/>
                    <ColumnDefinition Width="0.3*"/>
                    <ColumnDefinition Width="0.3*"/>
                    <ColumnDefinition Width="1.2*"/>
                    <ColumnDefinition Width="0.6*"/>
                    <ColumnDefinition Width="0.6*"/>
                    <ColumnDefinition Width="0.6*"/>
                </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Column="0" Text="№" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="1" Text="Physical" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="2" Text="Disable" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="3" Text="Invert" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="4" Text="Function" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="5" Text="Shift" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="6" Text="Delay timer" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Grid.Column="7" Text="Press timer" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            </Grid>

            <ItemsControl ItemsSource="{Binding Path=ButtonsVM.LogicalButtons}"
                  AlternationCount="{Binding ButtonsVM.LogicalButtons.Count}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate >
                    <Border BorderBrush="LightGray" BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.2*"/>
                                    <ColumnDefinition Width="0.4*"/>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition Width="1.2*"/>
                                    <ColumnDefinition Width="0.6*"/>
                                    <ColumnDefinition Width="0.6*"/>
                                    <ColumnDefinition Width="0.6*"/>
                                </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="5"/>
                            </Grid.RowDefinitions>

                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="True">
                                            <Setter Property="Background" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" HorizontalContentAlignment="Center"
                                   Content="{Binding Number}">
                            </Label>

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Minimum="0"  
                                                MinWidth="50" Margin="0,3,0,3" 
                                                HorizontalAlignment="Center" Value="{Binding Path=Config.PhysicalNumber}"
                                                Maximum="{Binding MaxPhysicalNumber}" MaxLength="3"/>

                                <CheckBox Grid.Column="2" Grid.Row="1" HorizontalContentAlignment="Center" 
                                          VerticalAlignment="Center" MaxWidth="16"
                                          IsChecked="{Binding Config.IsDisabled}"
                                          IsEnabled="{Binding Config.IsEnabled}"/>

                                <CheckBox Grid.Column="3" Grid.Row="1" HorizontalContentAlignment="Center" 
                                          VerticalAlignment="Center" MaxWidth="16"
                                          IsChecked="{Binding Config.IsInverted}"
                                          IsEnabled="{Binding Config.IsEnabled}"/>

                                <ComboBox Grid.Column="4" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding Path=AllowedTypes, IsAsync=True}"
                                      SelectedItem="{Binding Path=Config.Type, IsAsync=True}"
                                      IsEnabled="{Binding Config.IsEnabled, IsAsync=True}" Padding="0,0,-12,0">
                                </ComboBox>

                                <ComboBox Grid.Column="5" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding Source={StaticResource ShiftTypeFromEnum},IsAsync=True}"
                                      SelectedItem="{Binding Path=Config.ShiftModificator}"
                                      IsEnabled="{Binding Config.IsEnabled}" Padding="0,0,-12,0">
                                       
                                </ComboBox>

                                <ComboBox Grid.Column="6" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding Source={StaticResource TimerTypeFromEnum},IsAsync=True}"
                                      SelectedItem="{Binding Path=Config.ButtonDelayNumber}"
                                      IsEnabled="{Binding Config.IsEnabled}" Padding="0,0,-12,0">

                                </ComboBox>

                                <ComboBox Grid.Column="7" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding Source={StaticResource TimerTypeFromEnum},IsAsync=True}"
                                      SelectedItem="{Binding Path=Config.ButtonToggleNumber}"
                                      IsEnabled="{Binding Config.IsEnabled}" Padding="0,0,-12,0">

                                </ComboBox>

                            </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>
            </StackPanel>
    </ScrollViewer>

</UserControl>
